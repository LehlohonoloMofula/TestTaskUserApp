{"version":3,"sources":["webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/user/user-detail/user-detail.component.ts","webpack:///src/app/user/user-detail/user-detail.component.html","webpack:///src/app/user/user.service.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserComponent","usersService","modalService","title","keyword","pageNumber","pageSize","alert","users","find","page","subscribe","errorResponse","errorMessage","error","Message","$event","user","modal","open","size","windowClass","backdrop","keyboard","ariaLabelledBy","componentInstance","reloadItems","pageChange","environment","production","baseApiUrl","NavMenuComponent","router","isExpanded","toggle","AppComponent","UserDetailComponent","save","successMessage","name","close","message","emit","event","actionResult","UsersService","httpClient","id","get","params","put","post","AppModule","withServerTransition","appId","forRoot","path","component","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","useValue","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserDetailComponent } from './user-detail/user-detail.component'\nimport { Alert } from '../shared/alert'\nimport { User } from './user';\nimport { UserList } from './user-list';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UsersService } from './user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent implements OnInit {\n  title = 'Users';\n  keyword = \"\";\n  pageNumber = 1;\n  pageSize = 10;\n  alert : Alert;\n  users: UserList;\n  user: User;\n\n  constructor(private usersService: UsersService,\n    private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.alert = <Alert>{};\n    this.users = <UserList>{};\n    this.find();\n  }\n\n  pageChange(page: number) {\n    this.pageNumber = page;\n    this.find();\n  }\n  \n  find() {\n    this.usersService.find<UserList>(this.keyword, this.pageNumber, this.pageSize).subscribe(\n      users => {\n        this.users = users;\n      },\n      errorResponse => {\n        this.alert.errorMessage = errorResponse.error.Message;\n      });\n  }\n\n  reloadItems($event: any) {\n    this.alert = $event.alert;\n    this.find();\n  }\n\n  add() {\n    this.user = <User>{};\n    const modal = this.modalService.open(UserDetailComponent, {\n      size: 'lg', windowClass: 'modal-bottom-right', backdrop: 'static', keyboard: false,\n      ariaLabelledBy: 'modal-basic-title'\n    });\n    modal.componentInstance.user = this.user;\n    modal.componentInstance.reloadItems.subscribe(($event) => {\n      this.alert = $event.alert;\n    });\n  }\n\n  select(user: User) {\n    this.alert = <Alert>{};\n    const modal = this.modalService.open(UserDetailComponent, {\n      size: 'lg', windowClass: 'modal-bottom-right', backdrop: 'static', keyboard: false,\n      ariaLabelledBy: 'modal-basic-title'\n    });\n    modal.componentInstance.user= user;\n    modal.componentInstance.reloadItems.subscribe(($event) => {\n      this.alert = $event.alert;\n    });\n    return false;\n  }\n}","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <h1 class=\"h2\">{{ title }}</h1>\n</div>\n<ng-template #confirm let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Delete Confirmation</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"rejectionReason\">Are you sure you want to delete\n          {{ this.user.name }}?</label>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close()\">\n      Delete\n    </button>\n  </div>\n</ng-template>\n<div *ngIf=\"alert\">\n  <div *ngIf=\"alert.errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n    {{ alert.errorMessage }}\n  </div>\n  <div *ngIf=\"alert.successMessage\" class=\"alert alert-success\" role=\"alert\">\n    {{ alert.successMessage }}\n  </div>\n</div>\n<form (ngSubmit)=\"find()\" #searchForm=\"ngForm\">\n  <div class=\"input-group mb-3\">\n    <input name=\"keyword\" class=\"form-control\" type=\"text\" placeholder=\"keyword\" [(ngModel)]=\"keyword\" />\n    <div class=\"input-group-append\">\n      <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"searchForm.invalid\">\n        Search\n      </button>\n    </div>\n  </div>\n</form>\n<div class=\"table-responsive\">\n  <table class=\"table mt-3\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Status</th>\n      </tr>\n    </thead>\n    <tbody >\n      <tr *ngFor=\"let user of users.items\">\n        <td>{{ user.name }}</td>\n        <td>{{ user.email }}</td>\n        <td>{{ user.status }}</td>\n        <td>\n          <button class=\"btn btn-primary btn-sm mr-2\" (click)=\"select(user)\">\n            View\n          </button>\n        </td>\n      </tr>\n    </tbody>\n    <tbody *ngIf=\"!users\">\n      <tr>\n        <td>Loading...</td>\n      </tr>\n      <tr *ngIf=\"users && users.totalCount == 0\">\n        <td colspan=\"10\" class=\"text-center\">No User available.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<ngb-pagination (pageChange)=\"pageChange($event)\" [(page)]=\"pageNumber\" [pageSize]=\"pageSize\"\n  [collectionSize]=\"users.totalCount\" [maxSize]=\"5\"></ngb-pagination>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    baseApiUrl: 'https://testtaskuserwebapi.azurewebsites.net/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-nav-menu\",\n  templateUrl: \"./nav-menu.component.html\",\n  styleUrls: [\"./nav-menu.component.css\"],\n})\nexport class NavMenuComponent implements OnInit {\n  title = 'Test Task User';\n  isExpanded = false;\n\n  constructor( private router: Router\n  ) {}\n\n  ngOnInit(): void {\n \n  }\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","<header>\n    <nav\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">{{title}}</a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\".navbar-collapse\"\n          aria-label=\"Toggle navigation\"\n          [attr.aria-expanded]=\"isExpanded\"\n          (click)=\"toggle()\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n          [ngClass]=\"{ show: isExpanded }\"\n        >\n          <ul class=\"navbar-nav flex-grow\">\n            <li\n              class=\"nav-item\"\n              [routerLinkActive]=\"['link-active']\"\n            >\n              <a class=\"nav-link text-dark\" [routerLink]=\"['users']\">users</a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </nav>\n  </header>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Test Task User Angular';\n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Alert } from 'src/app/shared/alert';\nimport { User } from '../user';\nimport { UsersService } from '../user.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n  .modal-bottom-right .modal-content .modal-body {\n    border-radius:0;\n  }}\n`]\n})\nexport class UserDetailComponent implements OnInit {\n  @Input() user: User;\n  @Output() reloadItems = new EventEmitter();\n  alert: Alert;\n \n  constructor( private usersService: UsersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  save() {\n    this.alert = <Alert>{};\n    this.usersService.save<User>(this.user).subscribe(\n      user => {\n        this.alert.successMessage = `User: '${this.user.name}' saved successfully.`;\n        this.close();\n      },\n      errorResponse => {\n        this.alert.errorMessage = errorResponse.error.message;\n      });\n  }\n\n  close() {\n    this.user = null;\n    this.reloadItems.emit({ event: event, actionResult: this.alert, });\n    this.modal.close(\"Submit\");\n  }\n\n}\n","<div *ngIf=\"user\">\n  <form (ngSubmit)=\"save()\" #form=\"ngForm\">\n    <div class=\"modal-header\">\n      <strong>Create {{ title }}</strong>\n    </div>\n    <div class=\"modal-body\">\n      <div *ngIf=\"alert\">\n        <div *ngIf=\"alert.errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n          {{ alert.errorMessage }}\n        </div>\n        <div\n          *ngIf=\"alert.successMessage\"\n          class=\"alert alert-success\"\n          role=\"alert\"\n        >\n          {{ alert.successMessage }}\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div\n          class=\"form-group col-md-12\"\n          [class.has-errors]=\"name.invalid && name.touched\"\n        >\n          <label for=\"name\" class=\"control-label\">*First Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            class=\"form-control form-control-sm\"\n            placeholder=\"Lehlohonolo Mofula\"\n            readonly\n            [(ngModel)]=\"user.name\"\n            #name=\"ngModel\"\n          />\n          <span class=\"text-danger\" *ngIf=\"name.invalid && name.touched\">\n            NAME IS REQUIRED.\n          </span>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div\n          class=\"form-group col-md-12\"\n          [class.has-errors]=\"email.invalid && email.touched\"\n        >\n          <label for=\"email\" class=\"control-label\">*Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            class=\"form-control form-control-sm\"\n            placeholder=\"Lehlohonoloharrison@gmail.com\"\n            readonly\n            [(ngModel)]=\"user.email\"\n            #email=\"ngModel\"\n          />\n          <span class=\"text-danger\" *ngIf=\"email.invalid && email.touched\">\n            Email IS REQUIRED.\n          </span>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div\n          class=\"form-group col-md-12\"\n          [class.has-errors]=\"status.invalid && status.touched\"\n        >\n          <label for=\"status\" class=\"control-label\">*Status</label>\n          <input\n            type=\"text\"\n            name=\"status\"\n            class=\"form-control form-control-sm\"\n            placeholder=\"Active/Disable\"\n            readonly\n            [(ngModel)]=\"user.status\"\n            #status=\"ngModel\"\n          />\n          <span class=\"text-danger\" *ngIf=\"status.invalid && status.touched\">\n            Status IS REQUIRED.\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"reset\" class=\"btn btn-secondary btn-sm\" (click)=\"close()\">\n        Close\n      </button>\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-sm\"\n        [disabled]=\"!form.valid\"\n      >\n        Save\n      </button>\n    </div>\n  </form>\n</div>","import { Injectable, Inject } from \"@angular/core\";\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { User } from \"./user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UsersService {\n  constructor(\n    @Inject(\"BASE_API_URL\") private baseApiUrl: number,\n    private httpClient: HttpClient\n  ) {}\n \n  get<T>(id: string) {\n    return this.httpClient.get<T>(`${this.baseApiUrl}users/${id}`);\n  }\n\n  find<T>(keyword, pageNumber, pageSize) {\n    return this.httpClient.get<T>(`${this.baseApiUrl}users/find`,\n      {\n        params: { keyword, pageNumber, pageSize }\n      });\n  }\n\n  save<T>(user: User) {\n    if (user.id) {\n      return this.httpClient.put<T>(`${this.baseApiUrl}users/${user.id}`, user);\n    } else {\n      return this.httpClient.post<T>(`${this.baseApiUrl}users`, user);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgbActiveModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { UsersService } from './user/user.service';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { UserComponent } from './user/user.component';\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    UserComponent,\n    UserDetailComponent\n    \n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    RouterModule.forRoot([\n      { path: '', component: UserComponent},\n      { path: 'user/:id', component: UserDetailComponent}\n\n    ])\n    \n  ],\n\n  providers: [NgbActiveModal, UsersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] },\n  { provide: 'BASE_API_URL', useValue: environment.baseApiUrl }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}